#include <math.h>

void zamiana_lokalizacja_na_dziesietna(double lokalizacja[], double &szerokosc_dziesietna, double &dlugosc_dziesietna)
{
    int stopnie[2];
    stopnie[0] = lokalizacja[0]/100;
    stopnie[1] = lokalizacja[1]/100;

    lokalizacja[0] -= stopnie[0]*100;
    lokalizacja[1] -= stopnie[1]*100;

    szerokosc_dziesietna = stopnie[0] + lokalizacja[0]/60;
    dlugosc_dziesietna = stopnie[1] + lokalizacja[1]/60;
}

void obliczanie_kata_obrot(double roznica_szerokosc, double roznica_dlugosc, double &kat_obrot)
{
    if(roznica_dlugosc != 0)
    {
        kat_obrot = (atan(fabs(roznica_szerokosc/roznica_dlugosc)))*180/M_PI;
    }
    else
    {
        kat_obrot = 90;
    }

    if(roznica_dlugosc<=0 && roznica_szerokosc>=0)
    {
        kat_obrot = 180 - kat_obrot;
    }
    else if(roznica_dlugosc<=0 && roznica_szerokosc<=0)
    {
        kat_obrot = 180 + kat_obrot;
    }
    else if(roznica_dlugosc>=0 && roznica_szerokosc<=0)
    {
        kat_obrot = 360 - kat_obrot;
    }

}

void ograniczenia_kat_wysokosc(double &kat_wysokosc)
{
    if(kat_wysokosc > 70)
    {
        kat_wysokosc = 70;
    }
    if(kat_wysokosc < 0)
    {
        kat_wysokosc = 0;
    }
}

void obliczanie_kata_wysokosc(double roznica_wysokosc, double odleglosc_prosta, double &kat_wysokosc)
{
    if(odleglosc_prosta != 0)
    {
        kat_wysokosc = (atan(fabs(roznica_wysokosc/odleglosc_prosta)))*180/M_PI;
    }
    else
    {
        kat_wysokosc = 90;
    }

    if(roznica_wysokosc < 0)
    {
        kat_wysokosc *= -1;
    }

}

void obliczanie_odleglosci(double lokalizacja_stacji[], double wysokosc_stacji, double lokalizacja_cansata[], double wysokosc_cansata, double &odleglosc_prosta, double &odleglosc_calkowita, double &kat_obrot, double &kat_wysokosc)
{
    double szerokosc_dziesietna_stacji = 0;
    double dlugosc_dziesietna_stacji = 0;

    double szerokosc_dziesietna_cansata = 0;
    double dlugosc_dziesietna_cansata = 0;

    zamiana_lokalizacja_na_dziesietna(lokalizacja_stacji, szerokosc_dziesietna_stacji, dlugosc_dziesietna_stacji);
    zamiana_lokalizacja_na_dziesietna(lokalizacja_cansata, szerokosc_dziesietna_cansata, dlugosc_dziesietna_cansata);

    double roznica_szerokosc_1_stopien_metry = 2*M_PI*6371000/360;
    double roznica_dlugosc_1_stopien_metry = 2*M_PI*6371000/360*cos(szerokosc_dziesietna_stacji*2*M_PI/360);

    double roznica_szerokosc = (szerokosc_dziesietna_cansata - szerokosc_dziesietna_stacji)*roznica_szerokosc_1_stopien_metry;
    double roznica_dlugosc = (dlugosc_dziesietna_cansata - dlugosc_dziesietna_stacji)*roznica_dlugosc_1_stopien_metry;
    double roznica_wysokosc = wysokosc_cansata - wysokosc_stacji;

    odleglosc_prosta = sqrt(roznica_szerokosc*roznica_szerokosc + roznica_dlugosc*roznica_dlugosc);

    odleglosc_calkowita = sqrt(odleglosc_prosta*odleglosc_prosta + roznica_wysokosc*roznica_wysokosc);

    obliczanie_kata_obrot(roznica_szerokosc, roznica_dlugosc, kat_obrot);

    obliczanie_kata_wysokosc(roznica_wysokosc, odleglosc_prosta, kat_wysokosc);
    ograniczenia_kat_wysokosc(kat_wysokosc);
}


void setup() 
{
  Serial.begin(9600);
}


void loop() 
{
  double lokalizacja_stacji[2] = {5512.3455, 7574.4567};
  double wysokosc_stacji = 100;
  double lokalizacja_cansata[2] = {5712.3456, 7534.4567};
  double wysokosc_cansata = 4000;

  double odleglosc_prosta = 0;
  double odleglosc_calkowita = 0;
  double kat_obrot = 0;
  double kat_wysokosc = 0;

  obliczanie_odleglosci(lokalizacja_stacji, wysokosc_stacji, lokalizacja_cansata, wysokosc_cansata, odleglosc_prosta, odleglosc_calkowita, kat_obrot, kat_wysokosc);

  Serial.print("ODLEGLOSC PROSTA: ");
  Serial.println(odleglosc_prosta);
  Serial.print("ODLEGLOSC CALKOWITA: ");
  Serial.println(odleglosc_calkowita);
  Serial.print("KAT OBROT: ");
  Serial.println(kat_obrot);
  Serial.print("KAT WYSOKOSC: ");
  Serial.println(kat_wysokosc);
  
  delay(1000);
}
